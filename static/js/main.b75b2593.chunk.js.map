{"version":3,"sources":["components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["TodoInfo","todo","title","completed","userId","user","className","classNames","href","email","name","TodoList","todos","map","id","username","getUser","usersFromServer","find","todosWithUser","App","useState","setTitle","setUser","todosOnPage","setTodosOnPage","titleError","setTitleError","userError","setUserError","action","method","onSubmit","event","preventDefault","trim","newTitle","replace","newTodo","reduce","prev","current","htmlFor","type","placeholder","value","onChange","target","disabled","userFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b75b2593.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Todo } from '../../types/todo';\nimport { User } from '../../types/user';\n\ntype Props = {\n  todo: Todo,\n  user: User,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    userId,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={userId}\n      className={\n        classNames(\n          'TodoInfo',\n          { 'TodoInfo--completed': completed },\n        )\n      }\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && (\n        <a className=\"UserInfo\" href={`mailto: ${user.email}`}>\n          {user.name}\n        </a>\n      )}\n    </article>\n  );\n};\n","import { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/todo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => {\n        const { user, id } = todo;\n\n        return user && (\n          <TodoInfo\n            todo={todo}\n            user={user}\n            key={id}\n            data-id={todo.id}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/todo';\nimport { User } from './types/user';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userId: number): User | null {\n  const targetUser = usersFromServer.find(user => user.id === userId);\n\n  return targetUser || null;\n}\n\nconst todosWithUser: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [title, setTitle] = useState('');\n  const [user, setUser] = useState(0);\n  const [todosOnPage, setTodosOnPage] = useState(todosWithUser);\n  const [titleError, setTitleError] = useState(false);\n  const [userError, setUserError] = useState(false);\n\n  const handleTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUser = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUser(+event.target.value);\n    setUserError(false);\n  };\n\n  const clearForm = () => {\n    setTitle('');\n    setUser(0);\n  };\n\n  const handleAddButton = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title.trim() || !user) {\n      if (!title.trim()) {\n        setTitleError(true);\n      }\n\n      if (!user) {\n        setUserError(true);\n      }\n\n      return;\n    }\n\n    const newTitle = title.replace(/[^a-zA-Zа-яА-Я0-9\\s]/g, '');\n\n    const maxId = todosOnPage.reduce((prev, current) => {\n      return prev.id > current.id ? prev : current;\n    }).id;\n\n    const newTodo = {\n      id: maxId + 1,\n      title: newTitle,\n      userId: user,\n      completed: false,\n      user: getUser(user),\n    };\n\n    setTodosOnPage([...todosOnPage, newTodo]);\n    clearForm();\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleAddButton}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">\n            Title:\n            <span>&nbsp;</span>\n          </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={title}\n            onChange={handleTitle}\n          />\n\n          {titleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">\n            User:\n            <span>&nbsp;</span>\n          </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            name=\"user\"\n            value={user}\n            onChange={handleUser}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map(userFromServer => {\n              const { id, name } = userFromServer;\n\n              return (\n                <option value={id} key={id}>{name}</option>\n              );\n            })}\n          </select>\n\n          {userError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n      <TodoList todos={todosOnPage} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}